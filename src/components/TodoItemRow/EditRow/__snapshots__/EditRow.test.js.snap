// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`editRow renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditRow
    id="12345"
    onEditTodo={[MockFunction]}
    onToggleEdit={[MockFunction]}
    setRef={[MockFunction]}
    text="Learn unit testing"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <td>
          <input
            className="form-control todo-text"
            defaultValue="Learn unit testing"
            type="text"
          />
        </td>,
        <td />,
        <td>
          <button
            className="btn btn-success mr-2"
            onClick={[Function]}
            type="button"
          >
            Save
          </button>
          <button
            className="btn btn-danger mr-2"
            onClick={[MockFunction]}
            type="button"
          >
            Cancel
          </button>
        </td>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <input
            className="form-control todo-text"
            defaultValue="Learn unit testing"
            type="text"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "form-control todo-text",
            "defaultValue": "Learn unit testing",
            "type": "text",
          },
          "ref": [MockFunction],
          "rendered": null,
          "type": "input",
        },
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="btn btn-success mr-2"
              onClick={[Function]}
              type="button"
            >
              Save
            </button>,
            <button
              className="btn btn-danger mr-2"
              onClick={[MockFunction]}
              type="button"
            >
              Cancel
            </button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Save",
              "className": "btn btn-success mr-2",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": "Save",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Cancel",
              "className": "btn btn-danger mr-2",
              "onClick": [MockFunction],
              "type": "button",
            },
            "ref": null,
            "rendered": "Cancel",
            "type": "button",
          },
        ],
        "type": "td",
      },
    ],
    "type": "tr",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <td>
            <input
              className="form-control todo-text"
              defaultValue="Learn unit testing"
              type="text"
            />
          </td>,
          <td />,
          <td>
            <button
              className="btn btn-success mr-2"
              onClick={[Function]}
              type="button"
            >
              Save
            </button>
            <button
              className="btn btn-danger mr-2"
              onClick={[MockFunction]}
              type="button"
            >
              Cancel
            </button>
          </td>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              className="form-control todo-text"
              defaultValue="Learn unit testing"
              type="text"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form-control todo-text",
              "defaultValue": "Learn unit testing",
              "type": "text",
            },
            "ref": [MockFunction],
            "rendered": null,
            "type": "input",
          },
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="btn btn-success mr-2"
                onClick={[Function]}
                type="button"
              >
                Save
              </button>,
              <button
                className="btn btn-danger mr-2"
                onClick={[MockFunction]}
                type="button"
              >
                Cancel
              </button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Save",
                "className": "btn btn-success mr-2",
                "onClick": [Function],
                "type": "button",
              },
              "ref": null,
              "rendered": "Save",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Cancel",
                "className": "btn btn-danger mr-2",
                "onClick": [MockFunction],
                "type": "button",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": "button",
            },
          ],
          "type": "td",
        },
      ],
      "type": "tr",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
